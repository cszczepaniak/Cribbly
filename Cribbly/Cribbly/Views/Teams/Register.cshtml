@using Microsoft.AspNetCore.Identity;
@using Cribbly.Data;
@model Cribbly.Models.TeamRegView
@inject ApplicationDbContext _context;
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Register New Team</h2>

<h4>Enter info below</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Register">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="_team.Name" class="control-label"></label>
                <input asp-for="_team.Name" class="form-control"/>
                <span asp-validation-for="_team.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="_team.PlayerOne" class="control-label"></label>
                @{
                    <!--------Get the logged in user------->
                    var user = _context.ApplicationUsers.
                        FirstOrDefault(m => m.Email == UserManager.GetUserName(User));

                    string userName = user.FirstName + " " + user.LastName;

                    <input asp-for="_team.PlayerOne" class="form-control" value="@userName" readonly />

                }
                <span asp-validation-for="_team.PlayerOne" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="_team.PlayerTwo" class="control-label"></label>
                <select asp-for="_team.PlayerTwo" class="form-control">
                    <!--------Get all users except for the person logged in------->
                    @foreach (var player in Model._players)
                    {
                        if (player == userName)
                        {
                            continue;
                        }

                        <option>@player</option>
                    }
                </select>
                <span asp-validation-for="_team.PlayerTwo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Register Team" class="btn btn-default" id="submit"/>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}