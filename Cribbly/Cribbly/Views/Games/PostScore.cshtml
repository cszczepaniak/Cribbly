@using Microsoft.AspNetCore.Identity
@using Cribbly.Data;

@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext _context;

@model Cribbly.Models.ViewModels.PostScoreView;


<link rel="stylesheet" href="~/css/largeTables.css" type="text/css" />

@{
    ViewData["Title"] = "PostScore";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Post Score</h2>

@Html.ValidationSummary()


<form method="post" asp-action="PostScore">
    @{
        var user = @_context.ApplicationUsers.FirstOrDefault(m => m.Email == UserManager.GetUserName(User));
        <input asp-for="TeamId" type="hidden" value="@user.TeamId" />
    }

    <div class="form-group">
        <label>Game @Model.Games[0].GameNumber Score</label>
        <p>@Model.Games[0].Team1Name vs. @Model.Games[0].Team2Name</p>
        <input class="col-sm-6 form-control" asp-for="Game1Score" type="number" value="@Model.standing.G1Score" min="0" max="121" />
    </div>
    <br />
    <hr />
    <div class="form-group">
        <label>Game @Model.Games[1].GameNumber Score</label>
        <p>@Model.Games[1].Team1Name vs. @Model.Games[1].Team2Name</p>
        <input class="col-sm-6 form-control" asp-for="Game2Score" type="number" value="@Model.standing.G2Score" min="0" max="121" />
    </div>
    <br />
    <hr />
    <div class="form-group">
        <label>Game @Model.Games[2].GameNumber Score</label>
        <p>@Model.Games[2].Team1Name vs. @Model.Games[2].Team2Name</p>
        <input class="col-sm-6 form-control" asp-for="Game3Score" type="number" value="@Model.standing.G3Score" min="0" max="121" />
    </div>
    <br />
    <hr />
    <p>IMPORTANT: If you are not directed back to the My Team page, there was an issue with the scores. Talk to the team you played, as both teams or neither team entering 121 for a score will result in an error</p>


    <button class="btn" type="submit">Submit Scores</button>
</form>